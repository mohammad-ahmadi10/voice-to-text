{"version":3,"sources":["components/costum_dropdown/src/costumHooks/useLocalStorage.js","components/costum_dropdown/src/component/selectBoxStyle.js","components/costum_dropdown/src/component/SelectBox.js","App.js","index.js"],"names":["useLocalStorage","key","initialState","useState","value","JSON","parse","localStorage","getItem","Function","getValue","setValue","useEffect","setItem","stringify","removeItem","GlobalStyle","createGlobalStyle","Container","styled","div","OptContainer","width","backgroundColor","height","children","Array","length","Option","fontSize","color","hoverBackgroundColor","hoverColor","Selected","selectedHeight","ArrowContainer","Arrow","arrowHeight","arrowWidth","left","SelectBox","props","itemsList","selectedRef","useRef","optContainer","arrowRef1","arrowRef2","select","setSelect","selectedValue","setSelectedValue","optLabel","setOptLabel","onOptionClick","e","lbl","target","getSelectedValue","useCallback","lbl_values","id","innerHTML","useLayoutEffect","current","classList","add","remove","document","addEventListener","getArrow","ref","className","map","item","text","onClick","htmlFor","preventDefault","name","SpeechRecognition","window","speechRecognition","webkitSpeechRecognition","recognition","utter","SpeechSynthesisUtterance","interimResults","continuous","App","isUserCaputure","setIsUserCapture","sentence","setSentence","sentences","setSentences","isClick","copyRemoveFlag","setCopyRemoveFlag","lang","setLang","changeValue","setChangeValue","ChangeIndex","setChangeIndex","txtChange","setTxtChange","popUpRef","useLoading","loading","indicator","containerProps","indicatorEl","handleListening","node","parentElement","p","newList","filter","changeBackground","a","style","navigator","clipboard","writeText","setInterval","counter","handleReadSentence","tagName","speechSynthesis","speak","setTimeout","onend","stop","onresult","results","transcript","React","createElement","label","onerror","event","console","log","error","handleCopy","handleRemove","onChangeBtnClick","neuSentences","index","splice","arroWidth","type","prevState","start","Provider","size","boxShadow","cursor","pointerEvents","data-tip","effect","delayShow","getSaveContainer","onChange","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32b8fdf7.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nfunction getValue  (key, initialState){\r\n    const value = JSON.parse(localStorage.getItem(key));\r\n    if(value === null || value[1] === \"\") return initialState;\r\n    if(value) return value;\r\n    if(initialState instanceof Function) return initialState();\r\n    return initialState;\r\n} \r\n\r\n\r\nconst useLocalStorage = (key, initialState) =>{\r\n    const [value , setValue] = useState(() => getValue(key, initialState));\r\n\r\n \r\n    useEffect(() =>{\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n        if(initialState[1] === \"\") localStorage.removeItem(key);\r\n    },[value, key, initialState]);\r\n\r\n\r\n    return [value, setValue];\r\n}\r\n\r\nexport default useLocalStorage;","import styled, {createGlobalStyle} from 'styled-components';\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *, *::after, *::before{\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n    z-index: 1;\r\n    display: flex;\r\n    position: absolute;\r\n    flex-direction: column-reverse;\r\n    width: fit-content;\r\n    height: fit-content;\r\n    padding: 5px;\r\n    align-items: flex-start;\r\n`;\r\n\r\nconst OptContainer = styled.div`\r\n        width: ${({width}) => typeof width === \"string\"? width : \"200px\"};\r\n        display: flex;\r\n        flex-direction: column;\r\n        border-radius: 5px;\r\n        background-color: ${({backgroundColor}) => typeof backgroundColor === \"string\"? backgroundColor : \"rgb(0, 119, 0)\"};\r\n        margin: 10px;\r\n        margin-top: 2px;\r\n        margin-left: 0;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        height: 0;\r\n        transition: 0.6s ease-in-out opacity, 0.2s ease-out visibility, 0.5s ease-out height;\r\n\r\n        \r\n        &.select{\r\n        visibility: visible;\r\n        opacity: 1;\r\n        overflow: hidden;\r\n        height: ${({height, children}) => typeof height === \"string\"? height : children instanceof Array? `${children.length * 43}px` : \"50px\"};\r\n        }\r\n`;\r\n\r\n\r\nconst Option = styled.div`\r\n     padding: 10px;\r\n     margin: 1px;\r\n     border-radius: 5px;\r\n     cursor: pointer;\r\n\r\n    & label{\r\n        font-size: ${({fontSize}) => typeof fontSize === \"string\"? fontSize : \"18px\"};\r\n        pointer-events: none;\r\n        color: ${({color}) => color? color : \"white\"};\r\n    }\r\n\r\n    & input{\r\n        display: none;\r\n    }\r\n\r\n    :hover{\r\n        background-color: ${({hoverBackgroundColor}) => typeof hoverBackgroundColor === \"string\"? hoverBackgroundColor : \"whitesmoke\"};\r\n    }\r\n    :hover label{\r\n        color: ${({hoverColor}) => typeof hoverColor === \"string\"? hoverColor : \"black\"};\r\n    }\r\n`;\r\n\r\nconst Selected = styled.div`\r\n    display: flex;\r\n    justify-content:  space-between;\r\n    align-items:  center;\r\n    width: ${({width}) => typeof width === \"string\"? width : \"200px\"};\r\n    padding: 10px;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    background-color: ${({backgroundColor}) => typeof backgroundColor === \"string\"? backgroundColor : \" rgb(0, 119, 0)\"};\r\n    height: ${({selectedHeight}) => typeof selectedHeight === \"string\"? selectedHeight : \"50px\"};\r\n\r\n    border-radius: 5px;\r\n    & label{\r\n        color: ${({color}) => typeof color === \"string\"? color : \"white\"};\r\n        font-size: ${({fontSize}) => typeof fontSize === \"string\"? fontSize : \"18px\"};\r\n        pointer-events: none;\r\n    }\r\n\r\n`;\r\n\r\nconst ArrowContainer = styled.div`\r\n    justify-content:space-between;\r\n    display: flex;\r\n    flex-direction:row;\r\n    width: 10.5px;\r\n`;\r\n\r\n\r\nconst Arrow = styled.div`\r\n    background-color: white;\r\n    height: ${({arrowHeight}) => typeof arrowHeight === \"string\"? arrowHeight : \"15px\"};\r\n    width: ${({arrowWidth}) => typeof arrowWidth === \"string\"? arrowWidth : \"3.2px\"};\r\n    border-radius: 35%;\r\n    border-top-left-radius: 50%;\r\n    border-top-right-radius: 50%;\r\n    transition: 0.3s ease-in-out transform;   \r\n\r\n    &.arrow_up{\r\n        transform: ${({left}) => left? \"rotateZ(30deg)\" : \"rotateZ(-30deg)\"};\r\n    }\r\n    &.arrow_down{\r\n        transform: ${({left}) => left? \"rotateZ(150deg)\" : \"rotateZ(-150deg)\"}\r\n    }\r\n`;\r\n\r\n\r\nexport {\r\n    GlobalStyle,\r\n    Container,\r\n    OptContainer,\r\n    Option,\r\n    Selected,\r\n    ArrowContainer,\r\n    Arrow\r\n}","import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport useLocalStorage from '../costumHooks/useLocalStorage';\r\n\r\nimport {\r\n    GlobalStyle,\r\n    Container,\r\n    OptContainer,\r\n    Option,\r\n    Selected,\r\n    ArrowContainer,\r\n    Arrow\r\n} from \"./selectBoxStyle\";\r\n\r\n\r\nconst SelectBox = (props) => {\r\n    const {width, backgroundColor, height, fontSize, color, hoverBackgroundColor, \r\n           hoverColor, getValue, itemsList, arrowWidth, arrowHeight, selectedHeight} = props;\r\n\r\n    const selectedRef= useRef(null);\r\n    const optContainer = useRef(null);\r\n    const arrowRef1 = useRef(null);\r\n    const arrowRef2 = useRef(null);\r\n\r\n    const [select, setSelect] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useLocalStorage( \"selectItem\" , [itemsList instanceof Array? itemsList[0][0]: \"\" , itemsList instanceof Array? itemsList[0][1]: \"\"]);\r\n    \r\n    const [optLabel, setOptLabel] = useState(null);\r\n    \r\n    const handleSelectedClick = e =>{\r\n        e.preventDefault();\r\n        setSelect(select => !select);\r\n    }\r\n    \r\n    const onOptionClick = e =>{\r\n        let lbl = e.target.children[0];\r\n        setOptLabel(lbl);\r\n    }\r\n\r\n    const getSelectedValue = useCallback(\r\n        \r\n        () =>{\r\n            if(optLabel === null) return\r\n            let lbl_values = [optLabel.id, optLabel.innerHTML];\r\n            setSelectedValue(lbl_values)\r\n        }\r\n        , [optLabel, setSelectedValue]);\r\n\r\n    useEffect(() => {getSelectedValue()}, [optLabel, getSelectedValue]);\r\n    useLayoutEffect(() => {\r\n      if(select){\r\n        optContainer.current.classList.add('select');\r\n        arrowRef1.current.classList.add('arrow_down');\r\n        arrowRef2.current.classList.add('arrow_down');  \r\n        return\r\n      }\r\n      optContainer.current.classList.remove('select');\r\n      arrowRef1.current.classList.remove('arrow_down');\r\n      arrowRef2.current.classList.remove('arrow_down');\r\n\r\n    },[select]);\r\n    \r\n\r\n    useEffect(() => {       \r\n        if(select){\r\n            document.addEventListener(\"click\", e => {\r\n                if(e.target.id !== \"selected\" && select)\r\n                    setSelect(false);\r\n            })\r\n        }\r\n    }, [select]);\r\n    useEffect(() => {\r\n        if(getValue instanceof Function)\r\n            getValue(selectedValue)\r\n    },[ getValue, selectedValue ])\r\n    \r\n\r\n    const getOption = (value, text) => {\r\n       return   <Option onClick={onOptionClick} \r\n                        key={value}\r\n\r\n                        hoverBackgroundColor={hoverBackgroundColor}\r\n                        hoverColor={hoverColor}\r\n                        fontSize={fontSize} color={color}\r\n                >\r\n                    <label htmlFor={value} id={value} value={value} >{text}</label>\r\n                </Option>\r\n    }\r\n    const getArrow = (left, ref) =>{\r\n        return <Arrow ref={ref}  arrowHeight={arrowHeight} arrowWidth={arrowWidth}   left={left} className=\"arrow_up\"></Arrow>\r\n    }\r\n\r\n    \r\n    return (\r\n        <Container>\r\n            <GlobalStyle/>\r\n            <OptContainer ref={optContainer}   \r\n                          width={width} \r\n                          backgroundColor={backgroundColor} \r\n                          height={height}  \r\n            > \r\n                {   itemsList instanceof Array ? itemsList.map(item => (\r\n                        getOption(item[0], item[1])\r\n                )) : \r\n                    <></>\r\n                }\r\n               \r\n            </OptContainer>\r\n            <Selected onClick={handleSelectedClick}  id=\"selected\" ref={selectedRef}\r\n                      width={width}\r\n                      backgroundColor={backgroundColor}\r\n                      color={color} fontSize={fontSize}\r\n                      selectedHeight={selectedHeight}\r\n            >\r\n                    <label name={selectedValue[0] ? selectedValue[0]: \"\"} \r\n                           value={selectedValue[0] ? selectedValue[0]: \"\"}\r\n                    >{selectedValue[1] ? selectedValue[1]: \"\"}</label>\r\n                    <ArrowContainer>\r\n                        {getArrow(true,arrowRef1)}\r\n                        {getArrow(false,arrowRef2)}\r\n                    </ArrowContainer>\r\n            </Selected>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default SelectBox\r\n","import './App.css';\nimport React, {useState, useEffect, useCallback, useRef} from 'react';\n\nimport {AiOutlineCopy} from 'react-icons/ai';\nimport {RiCloseLine} from 'react-icons/ri';\nimport {IconContext} from 'react-icons';\nimport {GrSave} from 'react-icons/gr';\nimport {RiStopFill} from 'react-icons/ri'\nimport {GiMicrophone} from 'react-icons/gi';\nimport ReactTooltip from 'react-tooltip';\nimport {useLoading, Bars} from '@agney/react-loading';\nimport SelectBox from './components/costum_dropdown/src/component/SelectBox';\n\nconst SpeechRecognition = window.speechRecognition ||window.webkitSpeechRecognition;\nconst recognition = SpeechRecognition && new SpeechRecognition();\nconst utter = new SpeechSynthesisUtterance();\n\nrecognition.interimResults = true;\nrecognition.continuous = false;\n\n\n\nconst itemsList = [[\"en-US\", \"English\"],[\"ar-SA\",\"Arabic\"], [\"de-DE\", \"German\"], [\"fr-FR\", \"French\"], [\"es-ES\", \"Spanish\"], [\"tr-TR\", \"Turkish\"]]\n\n\nconst App = () => {\n  const [isUserCaputure,\n    setIsUserCapture] = useState(false);\n  const [sentence,\n    setSentence] = useState();\n  const [sentences,\n    setSentences] = useState([]);\n  const [copyRemoveFlag,\n    setCopyRemoveFlag] = useState({isClick: false, target: null});\n  const [lang, setLang] = useState([]);\n  const [changeValue, setChangeValue] = useState({id: \"\", text: \"\"})\n  const [ChangeIndex, setChangeIndex] = useState(-1);\n  const [txtChange, setTxtChange] = useState(false);\n\n  const popUpRef = useRef(null);\n  const getValue = useCallback( value => setLang(value), [setLang])\n    // loading or listening icon\n  const {containerProps, indicatorEl} = useLoading({loading: true, indicator: <Bars className=\"ball\"/>})\n\n\n  useEffect(() => {\n    if(txtChange){\n      popUpRef.current.classList.add(\"popup_fadein\")\n    }\n    else {\n      popUpRef.current.classList.remove(\"popup_fadein\")\n    }\n  },[txtChange])\n\n  useEffect(() => {\n    recognition.lang = lang[0];\n    utter.lang = lang[0];    \n  }, [lang])\n  \n\n  useEffect(() => {\n    handleListening();\n  }, [isUserCaputure])\n\n  useEffect(() => {\n    if (copyRemoveFlag.isClick) {\n      let node = copyRemoveFlag.target.parentElement.parentElement;\n      let p = node.children[1];\n      if (copyRemoveFlag.target.id === \"remove\") {\n        const newList = sentences.filter(sentence => sentence.props.id !== p.id)\n        setSentences(newList);\n      } else if (copyRemoveFlag.target.id === \"copy\") {\n        changeBackground(node);\n      }\n\n      setCopyRemoveFlag({isClick: false, target: null})\n\n    }\n  }, [copyRemoveFlag.isClick, copyRemoveFlag.target, sentences, setSentences])\n\n  const changeBackground = async(node) => {\n    let p = node.children[1];\n    node.style.backgroundColor = \"green\";\n    await navigator\n      .clipboard\n      .writeText(p.innerHTML);\n    setInterval(() => {\n      node.style.backgroundColor = \"whitesmoke\";\n    }, 1000)\n  }\n\n  let counter = 0;\n  const handleReadSentence = e =>{\n      e.preventDefault();\n      utter.text= e.target.innerHTML;\n      if(e.target.tagName === \"P\"){\n        window.speechSynthesis.speak(utter);\n      }\n      else if(e.target.tagName === \"DIV\"){\n        counter++;\n        if(counter === 2){\n          setChangeValue({id:e.target.children[1].innerHTML, text:e.target.children[1].innerHTML})\n          setTxtChange(true);\n        }\n        setTimeout(() => counter = 0, 200)\n      }\n  }\n\n  const handleListening = () => {\n    recognition.onend = () => {\n      recognition.stop();\n      setIsUserCapture(false);\n    }\n    recognition.onresult = function (e) {\n      let text = e.results[0][0].transcript;\n      let p = React.createElement('p', {\n        id: text,\n        label: text\n      }, text);\n\n      setSentence(p);\n    }\n    recognition.onerror = function (event) {\n      console.log('Error occurred in recognition: ' + event.error);\n    }\n  }\n\n\n  const handleStartStopBtn = e => {\n    e.preventDefault();\n    setIsUserCapture(prevState => !prevState);\n    if (e.target.name === \"stop\") {\n      recognition.stop();\n    } else if (e.target.name === \"start\") {\n      recognition.start();\n      setSentence(null);\n    }\n  }\n  const handleSaveBtn = e => {\n    e.preventDefault();\n    setIsUserCapture(false);\n    if (sentence && sentence.props.children.length > 0) \n      setSentences(sentences => [\n        ...sentences,\n        sentence\n      ])\n    setSentence(null);\n  }\n\n  const getSaveContainer = (sentence, id) => {\n    return <div className=\"saved_txt\" \n                key={id} onClick={handleReadSentence} \n                id={`cont${id}`}\n                data-tip=\"Press on the Text to hear it or double click to edit \"\n            >\n            <ReactTooltip effect=\"float\" delayShow={500} type=\"info\" />\n              {sentence}\n            <div className=\"icon_container\">\n              <IconContext.Provider value={{\n                className: \"prev_icon\"\n              }}>\n                <AiOutlineCopy id=\"copy\" onClick={handleCopy}/>\n                <RiCloseLine id=\"remove\" onClick={handleRemove}/>\n              </IconContext.Provider>\n            </div>\n    </div>\n  }\n\n  const handleCopy = e => {\n    setCopyRemoveFlag({isClick: true, target: e.target})\n  }\n  const handleRemove = e => {\n   \n    setCopyRemoveFlag({isClick: true, target: e.target})\n  }\n\n\n  const onChangeBtnClick = e =>{\n    e.preventDefault();\n    if(e.target.value === \"CHANGE\" && changeValue.text !== \"\"){\n        let neuSentences =  sentences.filter((sentence, index) => {\n                            return  sentence.props.id === changeValue.id? setChangeIndex(index) :  sentence\n                            })\n        \n        let p = React.createElement('p', {\n                        id: changeValue.text,\n                      }, changeValue.text);\n        neuSentences.splice(ChangeIndex, 0, p)\n        setSentences(neuSentences)\n        setTxtChange(false)\n    }else if(e.target.value === \"CANCEL\"){\n        setTxtChange(false)\n    }\n    \n  }\n\n  const onChangeValue = e =>{\n    setChangeValue(prevState => ({id: prevState.id, text: e.target.value}))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"speechContainer box\">\n          <div className=\"lang_continer\">\n            <SelectBox\n              width=\"100px\"\n              selectedHeight=\"30px\"\n              fontSize=\"16px\"\n              arroWidth=\"5px\"\n              arrowHeight=\"13px\"\n              backgroundColor=\"rgb(2,0,36)\"\n              getValue={getValue}\n              itemsList={itemsList}\n\n            />\n          </div>\n\n          <h4>Press the button below to capture your speech</h4>\n          <div className=\"bttn_container\">\n            <button\n              type=\"button\"\n              name={isUserCaputure\n              ? \"stop\"\n              : \"start\"}\n              onClick={handleStartStopBtn}>\n              <IconContext.Provider\n                value={{\n                color: isUserCaputure\n                  ? \"red\"\n                  : \"black\",\n                size: 35,\n                boxShadow: \"none\"\n              }}>\n                {isUserCaputure\n                  ? <div className=\"sp_st_container\"><RiStopFill/>\n                      STOP</div>\n                  : <div className=\"sp_st_container\"><GiMicrophone/>\n                    START</div>\n                }\n              </IconContext.Provider>\n            </button>\n            <button\n              onClick={handleSaveBtn}\n              style={{\n              backgroundColor: isUserCaputure\n                ? \"#f6cf50\"\n                : \"#d4af37\",\n              cursor: isUserCaputure\n                ? \"default\"\n                : \"pointer\",\n              pointerEvents: isUserCaputure\n                ? \"none\"\n                : \"visible\"\n            }}>\n              <IconContext.Provider\n                value={{\n                className: \"btn_sv_icon\"\n              }}>\n                <GrSave/>\n              </IconContext.Provider>\n            </button>\n\n            {isUserCaputure\n              ? <section {...containerProps}>\n                  {indicatorEl}\n                </section>\n              : null\n            }\n          </div>\n\n          <div className=\"conv_text\">\n            {sentence}\n          </div>\n        </div>\n        <div className=\"textContainer box\">\n          <div className=\"header\">\n            <p>Saved notes</p>\n          </div>\n          {sentences && sentences.map((sentence, index) => {\n            return getSaveContainer(sentence, index)\n          })\n          }\n        </div>\n      </div>\n\n       {/* Popup Section */}\n       <section ref={popUpRef} className=\"popupContainer\">\n            <div className=\"popupinnerContainer\">\n                <textarea  type=\"text\" value={changeValue.text} onChange={onChangeValue}/>\n                <div className=\"popup_btn_container\">\n                  <input type=\"button\" value=\"CANCEL\" onClick={onChangeBtnClick}\n                  />\n                  <input type=\"button\" value=\"CHANGE\" onClick={onChangeBtnClick}\n                          \n                  />\n                </div>\n            </div>\n        </section>\n        {/* Ende Popup Section */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}